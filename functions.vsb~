/pathway for global variables (indexes to 8 bit sections):
/"1" bits in 3800 are used for path
/"1" bits in 4000 are used for path flags
/"1" bits in 07f8 are the actual path indexes
/"1" bits in 0007 are the bits to index within 8 bit area
/path flags and values from 0000 to 6fff are wasted for creating path
/note: 7000 is not needed since loading the last digit does not
/require a path flag
/so, all variables are stored from 7000 - 7fff
/giving 2048 bits of ram or 256 bytes
/note: immediate variables that are not indexed to
/can be stored anywhere within the path
/they will just be access with an immediate value instead of path

/pathway for function variables (indexes to 8 bit sections):
/same as previous path but 8000 at beginning of memory addresses
/instead of 0000 at beginning

/function calls
/requires:
/function to increment function stack pointer
/function to decrement function stack pointer
/function to clear all function flags
/global variables set aside:
/7fff for function stack pointer
/70e0 - 70ef for values passed to function called
/note: since these values are all stored in the same location
/functions that are called recursively or simply after other functions
/will destroy the previous function's information
/so the function must take these values and store it in the function pathway
/since the pathway is indexed with the stack pointer
/which will allow functions to have seperate memory

/to call:
/***call itself:
/call flag reset section
/set this locatino return flag to 1
/set function variables
/jump to function
/***flag reset function:
/sets all flags to zero
/***function itself:
/function increments stack pointer as offloads variables into array
/for function variables if needed
/function does stuff
/function decrements stack pointer to original
/and doesn't have to do anything to array
/goes to return function
/***increment function:
/uses path indexing to add 1 to pointer
/***decrement function:
/uses path indexing to subtract 1 from pointer
/***return function:
/function cycles through possible return locations
/until return flag at that locatino is 1,
/in which case it will return there
/***
/note: helpful to combine the reset and return, etc in with each call
/so you don't have to jump around and edit different code segments
/actually: this is extremely difficult since
/you don't know in advance which call is last
/so you can't write jumps effectively
/probably just create seperate sections

/random example init
0000 out0 ffff 0001
0001 adr0 ffff 0010
/function call to output value at 7000